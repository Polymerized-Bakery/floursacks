plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'

    id "me.modmuss50.mod-publish-plugin" version "0.6.2"
}

version = project.mod_version
group = project.maven_group

ext {
    desc    = project.hasProperty('mod_desc')    ? project.property('mod_desc')    : ''
    modid    = project.hasProperty('mod_id')        ? project.property('mod_id')    : ''
    name    = project.hasProperty('mod_name')    ? project.property('mod_name')    : ''
    ovenlib    = project.hasProperty('ovenlib')    ? project.property('ovenlib')    : ''
    sgui    = project.hasProperty('ovenlib')    ? project.property('sgui')    : ''
}


base {
    archivesName = project.modid
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    mavenLocal()
    maven { url 'https://api.modrinth.com/maven'    }
    maven { url 'https://maven.nucleoid.xyz'        }
    maven { url 'https://maven.terraformersmc.com'    }
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "bakers_template" {
            sourceSet sourceSets.main
        }
    }

}

fabricApi {
    configureDataGeneration()
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Polymer and OvenLib
    modImplementation include("maven.modrinth:ovenlib:${project.ovenlib}")
    modImplementation include("eu.pb4:polymer-core:${project.polymer}+${project.minecraft_version}")
    modImplementation include("eu.pb4:polymer-blocks:${project.polymer}+${project.minecraft_version}")
    modImplementation include("eu.pb4:polymer-resource-pack:${project.polymer}+${project.minecraft_version}")

    modImplementation include("eu.pb4:sgui:${project.sgui}+${project.minecraft_version}")

    // add mods to dev environment, add more to `./run/mods`
    modImplementation("maven.modrinth:modmenu:${project.modmenu_version}")
}

processResources {
    inputs.property "desc",     project.ext.desc
    inputs.property "modid",    project.ext.modid
    inputs.property "name",     project.ext.name
    inputs.property "ovenlib",  project.ovenlib
    inputs.property "polymer",  project.polymer
    inputs.property "sgui",     project.ext.sgui
    inputs.property "version",  project.version

    filesMatching("fabric.mod.json") {
        expand(
            "desc"      : project.ext.desc,
            "modid"     : project.ext.modid,
            "name"      : project.ext.name,
            "ovenlib"   : project.ext.ovenlib,
            "polymer"   : project.ext.polymer,
            "sgui"      : project.ext.sgui,
            "version"   : project.version,
        )
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.modid
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

publishMods {
    changelog = System.getenv("CHANGELOG")  ?: "No Changelog Provided for Release"
    type = STABLE
    file = remapJar.archiveFile
    modLoaders.add("fabric")

    version = project.version

    modrinth {
        accessToken = System.getenv("MODRINTH_TOKEN")
        projectId = providers.gradleProperty("modrinth_id")
        minecraftVersions.add(providers.gradleProperty("minecraft_version"))
        requires("fabric-api")
        requires("ovenlib")
        requires("polymer")
    }
}